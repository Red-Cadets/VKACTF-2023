#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *
from Crypto.Util.number import *

#-------------------------
# host = args.HOST or '127.0.0.1'
host = "176.118.165.216"
port = int(args.PORT or 1337)
#------------------------- Сделать актуальными

r = remote(host , port)

r.recvuntil(": ")
r.sendline("574923920397620")

r.recvuntil(": ")
r.sendline("212456")

r.recvuntil("N =  ")
try:
    N = int(r.recvline()[:-1])
except:
    quit("Can't public key!")
   
e = 65537

r.recvuntil(": ")
r.sendline("8564125")

M = [0 , 0]
try:
    while (M[0] + M[1]) % N == 0 :
        for i in range(2):
            r.recvuntil(": ")
            r.sendline("4")
            r.recvuntil(": ")
            r.sendline("4")
            M[i] = int(r.recvline()[:-1])
except:
    quit("Can't sqrt!")
    
p = GCD(M[0] + M[1], N) 

q = N // p
phi = (p - 1)*(q - 1)
d = inverse(e , phi)

if (p * q != N):
    quit("Can't p * q == N!")

r.recvuntil(": ")
r.sendline("0")
r.recvuntil(": ")
r.sendline("0")

r.recvuntil(": ")
r.sendline("1")
r.recvuntil("= ")
try:
    ct = int(r.recvline()[:-1])
except:
    quit("Can't ciphertext!")
password = pow(ct , d , N)
password = long_to_bytes(password)

r.recvuntil(": ")
r.sendline("2")
r.recvuntil(": ")
r.sendline(password)

flag = r.recvline()
if not b"vka{" in flag:
    quit("Can't get flag!")